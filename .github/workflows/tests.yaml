
name: Multi-Backend Tests

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main
      - dev

defaults:
  run:
    shell: bash


jobs:
  test:
    name: Run Multi-Backend Tests

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.10", "3.11"]
        backend: ["jax", "tensorflow", "torch"]

    runs-on: ${{ matrix.os }}

    env:
      KERAS_BACKEND: ${{ matrix.backend }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          pip install -U pip setuptools wheel
          pip install .[test]

      - name: Install JAX
        if: ${{ matrix.backend == 'jax' }}
        run: |
          pip install -U jax

      - name: Install TensorFlow
        if: ${{ matrix.backend == 'tensorflow' }}
        run: |
          pip install -U tensorflow

      - name: Install PyTorch
        if: ${{ matrix.backend == 'torch' }}
        run: |
          pip install -U torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu

      # we currently have extra dependencies for torch tests
      # TODO: can we install this dynamically? should we add it to the test dependencies?
      - name: Install Extra Dependencies
        if: ${{ matrix.backend == 'torch' }}
        run: |
          pip install -U mamba-ssm

      - name: Show Environment Info
        run: |
          python --version
          pip --version
          printenv | sort
          pip list

      - name: Run Tests
        run: |
          pytest -x -m "not slow"

      - name: Run Slow Tests
        # run all slow tests only on manual trigger
        if: github.event_name == 'workflow_dispatch'
        run: |
          pytest -m "slow"

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Create Coverage Report
        run: |
          coverage xml

      - name: Upload Coverage Reports to CodeCov
        uses: codecov/codecov-action@v4
        with:
          # do not use the files attribute here, otherwise the reports are not merged correctly
          token: ${{ secrets.CODECOV_TOKEN }}
